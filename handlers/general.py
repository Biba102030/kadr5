from aiogram import Dispatcher, types
from keyboards import get_main_menu, get_back_to_main_menu
from user_manager import UserManager
import logging

logger = logging.getLogger(__name__)

user_manager = UserManager()

async def handle_help(callback: types.CallbackQuery):
    await callback.answer()
    help_text = """
üìã **–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞**

ü§ñ **–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**
‚Ä¢ üì∞ **–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å—Ç–∞—Ç—å–∏** - –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å kadrovik.uz
‚Ä¢ üìö **–†—É–±—Ä–∏–∫–∏** - —Å—Ç–∞—Ç—å–∏ –ø–æ —Ç–µ–º–∞–º (—Ç—Ä—É–¥–æ–≤–æ–µ –ø—Ä–∞–≤–æ, –Ω–∞–ª–æ–≥–∏, –æ—Ç–ø—É—Å–∫–∞ –∏ –¥—Ä.)
‚Ä¢ üîç **–ü–æ–∏—Å–∫** - –Ω–∞–π—Ç–∏ —Å—Ç–∞—Ç—å–∏ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
‚Ä¢ üóûÔ∏è **–ù–æ–≤–æ—Å—Ç–∏** - —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –¥–ª—è –∫–∞–¥—Ä–æ–≤–∏–∫–æ–≤

üí° **–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:**
1. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
2. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –±–æ—Ç–∞
3. –ß–∏—Ç–∞–π—Ç–µ —Å—Ç–∞—Ç—å–∏ –ø—Ä—è–º–æ –≤ Telegram –∏–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç

üîç **–°–æ–≤–µ—Ç—ã –ø–æ –ø–æ–∏—Å–∫—É:**
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã: "—Ç—Ä—É–¥–æ–≤–æ–π –¥–æ–≥–æ–≤–æ—Ä", "–æ—Ç–ø—É—Å–∫", "–±–æ–ª—å–Ω–∏—á–Ω—ã–π"
‚Ä¢ –ú–æ–∂–Ω–æ –∏—Å–∫–∞—Ç—å –ø–æ —Ñ—Ä–∞–∑–∞–º: "—Ä–∞—Å—á–µ—Ç –∑–∞—Ä–ø–ª–∞—Ç—ã"
‚Ä¢ –ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É —Å—Ç–∞—Ç–µ–π

üìû **–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?**
–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:
‚Ä¢ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start
‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É

üåê **–ò—Å—Ç–æ—á–Ω–∏–∫:** kadrovik.uz
    """
    
    await callback.message.edit_text(
        help_text,
        reply_markup=get_back_to_main_menu(),
        parse_mode='Markdown'
    )

async def handle_about(callback: types.CallbackQuery):
    await callback.answer()
    about_text = """
ü§ñ **–û –±–æ—Ç–µ KADROVIK.UZ**

üìã **–û–ø–∏—Å–∞–Ω–∏–µ:**
–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –±—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –∫–∞–¥—Ä–æ–≤—ã—Ö —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞.

üéØ **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:**
‚Ä¢ –û–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π –∫–∞–¥—Ä–æ–≤–æ–≥–æ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞
‚Ä¢ –ü–æ–∏—Å–∫ –Ω—É–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∫–∞–¥—Ä–æ–≤—ã–º –≤–æ–ø—Ä–æ—Å–∞–º
‚Ä¢ –£–¥–æ–±–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º —Å —Å–∞–π—Ç–∞ kadrovik.uz

‚ö° **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å—Ç–∞—Ç–µ–π –∏ –Ω–æ–≤–æ—Å—Ç–µ–π
‚Ä¢ –ü–æ–∏—Å–∫ –ø–æ –±–∞–∑–µ —Å—Ç–∞—Ç–µ–π
‚Ä¢ –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —Ä—É–±—Ä–∏–∫–∞–º
‚Ä¢ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ —Å—Ç–∞—Ç–µ–π

üåê **–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö:** 
kadrovik.uz - –≤–µ–¥—É—â–∏–π —Ä–µ—Å—É—Ä—Å –¥–ª—è –∫–∞–¥—Ä–æ–≤–∏–∫–æ–≤ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞

üìÖ **–í–µ—Ä—Å–∏—è:** 2.0
üõ†Ô∏è **–°—Ç–∞—Ç—É—Å:** –ê–∫—Ç–∏–≤–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞

üí¨ **–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å:**
–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –±–æ—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
    """
    
    await callback.message.edit_text(
        about_text,
        reply_markup=get_back_to_main_menu(),
        parse_mode='Markdown'
    )

async def handle_main_menu(callback: types.CallbackQuery):
    await callback.answer()
    user_id = str(callback.from_user.id)
    user = user_manager.get_user(user_id)
    
    welcome_text = f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user['name'] if user else '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}!\n\n"
    welcome_text += "ü§ñ **KADROVIK.UZ BOT**\n"
    welcome_text += "–í–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ –∫–∞–¥—Ä–æ–≤–æ–≥–æ –¥–µ–ª–æ–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞\n\n"
    welcome_text += "üìã –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é:"
    
    await callback.message.edit_text(
        welcome_text,
        reply_markup=get_main_menu(),
        parse_mode='Markdown'
    )

async def handle_unknown_message(message: types.Message):
    await message.answer(
        "‚ùì –ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.",
        reply_markup=get_main_menu()
    )

def register_general_handlers(dp: Dispatcher):
    dp.callback_query.register(handle_help, lambda c: c.data == "help")
    dp.callback_query.register(handle_about, lambda c: c.data == "about")
    dp.callback_query.register(handle_main_menu, lambda c: c.data == "main_menu")
    dp.message.register(handle_unknown_message)